{"version":3,"file":"default-src_app_module_task_task_module_ts.js","mappings":"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","sources":["./src/app/component/task/task-detail/task-detail.component.ts","./src/app/component/task/task-detail/task-detail.component.html","./src/app/component/task/task-form/task-form.component.ts","./src/app/component/task/task-form/task-form.component.html","./src/app/component/task/task-list/task-list.component.ts","./src/app/component/task/task-list/task-list.component.html","./src/app/module/task/task-routing.module.ts","./src/app/module/task/task.module.ts","./node_modules/@angular/cdk/fesm2015/clipboard.mjs","./node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-badge.mjs","./node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-core-trans-button.mjs","./node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-typography.mjs"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-task-detail',\n    templateUrl: './task-detail.component.html',\n    styleUrls: ['./task-detail.component.scss']\n})\nexport class TaskDetailComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    onBack() {\n        history.go(-1)\n    }\n}\n","<div class=\"container\">\n    <div style=\"display: flex;\">\n        <div style=\"margin-right: 32px;\" (click)=\"onBack()\">\n            <i nz-icon style=\"font-size: 32px;\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-5 -5 24 24\" width=\"32\" fill=\"currentColor\">\n                    <path\n                        d=\"M3.414 7.657l3.95 3.95A1 1 0 0 1 5.95 13.02L.293 7.364a.997.997 0 0 1 0-1.414L5.95.293a1 1 0 1 1 1.414 1.414l-3.95 3.95H13a1 1 0 0 1 0 2H3.414z\">\n                    </path>\n                </svg>\n            </i>\n        </div>\n        <div>\n            <h4 nz-typography>任务标题</h4>\n        </div>\n    </div>\n    <nz-divider></nz-divider>\n    <p nz-typography style=\"margin-bottom: 16px;\">任务内容</p>\n    <nz-table #basicTable>\n        <thead>\n            <tr>\n                <th>序号</th>\n                <th>学生姓名</th>\n                <th>状态</th>\n                <th>操作</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>1</td>\n                <td>姜凯文</td>\n                <td>\n                    <nz-badge nzStatus=\"warning\" nzText=\"已提交\"></nz-badge>\n                </td>\n                <td>\n                    <a>查看</a>\n                </td>\n            </tr>\n            <tr>\n                <td>2</td>\n                <td>姜凯文</td>\n                <td>\n                    <nz-badge nzStatus=\"error\" nzText=\"未提交\"></nz-badge>\n                </td>\n                <td>\n                    <a>查看</a>\n                </td>\n            </tr>\n            <tr>\n                <td>3</td>\n                <td>姜凯文</td>\n                <td>\n                    <nz-badge nzStatus=\"success\" nzText=\"已通过\"></nz-badge>\n                </td>\n                <td>\n                    <a>查看</a>\n                </td>\n            </tr>\n        </tbody>\n    </nz-table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-task-form',\n    templateUrl: './task-form.component.html',\n    styleUrls: ['./task-form.component.scss']\n})\nexport class TaskFormComponent implements OnInit {\n\n    drawerVisible: boolean = false;\n\n    constructor() { }\n\n    ngOnInit(): void { }\n\n    openDrawer(): void {\n        this.drawerVisible = true;\n    }\n\n    closeDrawer(): void {\n        this.drawerVisible = false;\n    }\n\n}\n","<nz-drawer [nzBodyStyle]=\"{ overflow: 'auto' }\" [nzMaskClosable]=\"false\" [nzWidth]=\"560\" [nzVisible]=\"drawerVisible\"\n    nzTitle=\"创建任务\" [nzFooter]=\"footerTpl\" (nzOnClose)=\"closeDrawer()\">\n    <form nz-form *nzDrawerContent>\n        <nz-form-item>\n            <nz-form-label>任务名称</nz-form-label>\n            <nz-form-control>\n                <input nz-input />\n            </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n            <nz-form-label>任务内容</nz-form-label>\n            <nz-form-control>\n                <textarea nz-input [nzAutosize]=\"{ minRows: 4, maxRows: 4 }\"></textarea>\n            </nz-form-control>\n        </nz-form-item>\n    </form>\n    <ng-template #footerTpl>\n        <div style=\"float: right\">\n            <button nz-button style=\"margin-right: 8px;\" (click)=\"closeDrawer()\">取消</button>\n            <button nz-button nzType=\"primary\" (click)=\"closeDrawer()\">保存</button>\n        </div>\n    </ng-template>\n</nz-drawer>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { TaskFormComponent } from '../task-form/task-form.component';\n\n@Component({\n    selector: 'app-task-list',\n    templateUrl: './task-list.component.html',\n    styleUrls: ['./task-list.component.scss']\n})\nexport class TaskListComponent implements OnInit {\n\n    @ViewChild('taskFormDrawer')\n    taskFormDrawer: TaskFormComponent | undefined;\n\n    constructor() { }\n\n    ngOnInit(): void { }\n\n    openTaskDrawer(): void {\n        this.taskFormDrawer?.openDrawer();\n    }\n\n}\n","<div class=\"container\">\n    <div nz-row class=\"menu\" [nzGutter]=\"16\" nzJustify=\"center\">\n        <div nz-col nzSpan=\"4\">\n            <input nz-input placeholder=\"搜索你的任务\" />\n        </div>\n        <div nz-col nzSpan=\"4\">\n            <nz-select nzPlaceHolder=\"研究方向\" nzAllowClear>\n                <nz-option nzValue=\"1\" nzLabel=\"Artificial intelligence\"></nz-option>\n                <nz-option nzValue=\"2\" nzLabel=\"Computer graphics and visualization\"></nz-option>\n            </nz-select>\n        </div>\n        <div nz-col nzSpan=\"4\">\n            <nz-select nzPlaceHolder=\"任务状态\" nzAllowClear>\n                <nz-option nzValue=\"1\" nzLabel=\"未发布\"></nz-option>\n                <nz-option nzValue=\"2\" nzLabel=\"进行中\"></nz-option>\n                <nz-option nzValue=\"3\" nzLabel=\"已完成\"></nz-option>\n            </nz-select>\n        </div>\n        <div nz-col nzSpan=\"2\">\n            <button nzType=\"primary\" (click)=\"openTaskDrawer()\" nz-button>创建任务</button>\n        </div>\n    </div>\n    <nz-table #basicTable>\n        <thead>\n            <tr>\n                <th>序号</th>\n                <th>任务标题</th>\n                <th>研究方向</th>\n                <th>任务状态</th>\n                <th>操作</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>1</td>\n                <td>测试任务</td>\n                <td></td>\n                <td>\n                    <nz-badge nzStatus=\"processing\" nzText=\"进行中\"></nz-badge>\n                </td>\n                <td>\n                    <a>查看</a>\n                    <nz-divider nzType=\"vertical\"></nz-divider>\n                    <a (click)=\"openTaskDrawer()\">编辑</a>\n                    <nz-divider nzType=\"vertical\"></nz-divider>\n                    <a>删除</a>\n                </td>\n            </tr>\n        </tbody>\n    </nz-table>\n</div>\n\n<app-task-form #taskFormDrawer></app-task-form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TaskDetailComponent } from 'src/app/component/task/task-detail/task-detail.component';\nimport { TaskListComponent } from 'src/app/component/task/task-list/task-list.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: TaskListComponent\n    },\n    {\n        path: 'detail',\n        data: { breadcrumb: '任务详情' },\n        component: TaskDetailComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TaskRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Task模块组件\nimport { TaskDetailComponent } from 'src/app/component/task/task-detail/task-detail.component';\nimport { TaskFormComponent } from 'src/app/component/task/task-form/task-form.component';\nimport { TaskListComponent } from 'src/app/component/task/task-list/task-list.component';\n\n// Task模块路由\nimport { TaskRoutingModule } from './task-routing.module';\n\n// 通用\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzTypographyModule } from 'ng-zorro-antd/typography';\n// 布局\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\n// 数据录入\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\n// 数据展示\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzTableModule } from 'ng-zorro-antd/table';\n// 反馈\nimport { NzDrawerModule } from 'ng-zorro-antd/drawer';\n\n\n@NgModule({\n    declarations: [\n        TaskDetailComponent,\n        TaskFormComponent,\n        TaskListComponent,\n    ],\n    imports: [\n        CommonModule,\n        TaskRoutingModule,\n        NzButtonModule,\n        NzIconModule,\n        NzTypographyModule,\n        NzDividerModule,\n        NzGridModule,\n        NzFormModule,\n        NzInputModule,\n        NzSelectModule,\n        NzBadgeModule,\n        NzTableModule,\n        NzDrawerModule\n    ],\n    exports: [\n        TaskFormComponent\n    ]\n})\nexport class TaskModule { }\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a relayout. This relayout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * relayout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = (this._textarea = this._document.createElement('textarea'));\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        this._document.body.appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try {\n            // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch (_a) {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            textarea.remove();\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n}\nClipboard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Clipboard, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nClipboard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Clipboard, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Clipboard, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n}\nCdkCopyToClipboard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCopyToClipboard, deps: [{ token: Clipboard }, { token: i0.NgZone }, { token: CDK_COPY_TO_CLIPBOARD_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCopyToClipboard.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkCopyToClipboard, selector: \"[cdkCopyToClipboard]\", inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" }, host: { listeners: { \"click\": \"copy()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCopyToClipboard, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCopyToClipboard]',\n                    host: {\n                        '(click)': 'copy()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: Clipboard }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_COPY_TO_CLIPBOARD_CONFIG]\n                    }] }];\n    }, propDecorators: { text: [{\n                type: Input,\n                args: ['cdkCopyToClipboard']\n            }], attempts: [{\n                type: Input,\n                args: ['cdkCopyToClipboardAttempts']\n            }], copied: [{\n                type: Output,\n                args: ['cdkCopyToClipboardCopied']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClipboardModule {\n}\nClipboardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ClipboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nClipboardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ClipboardModule, declarations: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] });\nClipboardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ClipboardModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ClipboardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkCopyToClipboard],\n                    exports: [CdkCopyToClipboard],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n","import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Optional, Host, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst badgePresetColors = [\n    'pink',\n    'red',\n    'yellow',\n    'orange',\n    'cyan',\n    'green',\n    'blue',\n    'purple',\n    'geekblue',\n    'magenta',\n    'volcano',\n    'gold',\n    'lime'\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeSupComponent {\n    constructor() {\n        this.nzStyle = null;\n        this.nzDot = false;\n        this.nzOverflowCount = 99;\n        this.disableAnimation = false;\n        this.noAnimation = false;\n        this.maxNumberArray = [];\n        this.countArray = [];\n        this.count = 0;\n        this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    }\n    generateMaxNumberArray() {\n        this.maxNumberArray = this.nzOverflowCount.toString().split('');\n    }\n    ngOnInit() {\n        this.generateMaxNumberArray();\n    }\n    ngOnChanges(changes) {\n        const { nzOverflowCount, nzCount } = changes;\n        if (nzCount && typeof nzCount.currentValue === 'number') {\n            this.count = Math.max(0, nzCount.currentValue);\n            this.countArray = this.count\n                .toString()\n                .split('')\n                .map(item => +item);\n        }\n        if (nzOverflowCount) {\n            this.generateMaxNumberArray();\n        }\n    }\n}\nNzBadgeSupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzBadgeSupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzBadgeSupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NzBadgeSupComponent, selector: \"nz-badge-sup\", inputs: { nzOffset: \"nzOffset\", nzTitle: \"nzTitle\", nzStyle: \"nzStyle\", nzDot: \"nzDot\", nzOverflowCount: \"nzOverflowCount\", disableAnimation: \"disableAnimation\", nzCount: \"nzCount\", noAnimation: \"noAnimation\" }, host: { properties: { \"@.disabled\": \"disableAnimation\", \"@zoomBadgeMotion\": \"\", \"attr.title\": \"nzTitle === null ? '' : nzTitle || nzCount\", \"style\": \"nzStyle\", \"style.right.px\": \"nzOffset && nzOffset[0] ? -nzOffset[0] : null\", \"style.margin-top.px\": \"nzOffset && nzOffset[1] ? nzOffset[1] : null\", \"class.ant-badge-count\": \"!nzDot\", \"class.ant-badge-dot\": \"nzDot\", \"class.ant-badge-multiple-words\": \"countArray.length >= 2\" }, classAttribute: \"ant-scroll-number\" }, exportAs: [\"nzBadgeSup\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"count <= nzOverflowCount; else overflowTemplate\">\n      <span\n        [nzNoAnimation]=\"noAnimation\"\n        *ngFor=\"let n of maxNumberArray; let i = index\"\n        class=\"ant-scroll-number-only\"\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n      >\n        <ng-container *ngIf=\"!nzDot && countArray[i] !== undefined\">\n          <p\n            *ngFor=\"let p of countSingleArray\"\n            class=\"ant-scroll-number-only-unit\"\n            [class.current]=\"p === countArray[i]\"\n          >\n            {{ p }}\n          </p>\n        </ng-container>\n      </span>\n    </ng-container>\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\n  `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NzNoAnimationDirective, selector: \"[nzNoAnimation]\", inputs: [\"nzNoAnimation\"], exportAs: [\"nzNoAnimation\"] }], animations: [zoomBadgeMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzBadgeSupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-badge-sup',\n                    exportAs: 'nzBadgeSup',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [zoomBadgeMotion],\n                    template: `\n    <ng-container *ngIf=\"count <= nzOverflowCount; else overflowTemplate\">\n      <span\n        [nzNoAnimation]=\"noAnimation\"\n        *ngFor=\"let n of maxNumberArray; let i = index\"\n        class=\"ant-scroll-number-only\"\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n      >\n        <ng-container *ngIf=\"!nzDot && countArray[i] !== undefined\">\n          <p\n            *ngFor=\"let p of countSingleArray\"\n            class=\"ant-scroll-number-only-unit\"\n            [class.current]=\"p === countArray[i]\"\n          >\n            {{ p }}\n          </p>\n        </ng-container>\n      </span>\n    </ng-container>\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\n  `,\n                    host: {\n                        class: 'ant-scroll-number',\n                        '[@.disabled]': `disableAnimation`,\n                        '[@zoomBadgeMotion]': '',\n                        '[attr.title]': `nzTitle === null ? '' : nzTitle || nzCount`,\n                        '[style]': `nzStyle`,\n                        '[style.right.px]': `nzOffset && nzOffset[0] ? -nzOffset[0] : null`,\n                        '[style.margin-top.px]': `nzOffset && nzOffset[1] ? nzOffset[1] : null`,\n                        '[class.ant-badge-count]': `!nzDot`,\n                        '[class.ant-badge-dot]': `nzDot`,\n                        '[class.ant-badge-multiple-words]': `countArray.length >= 2`\n                    }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzOffset: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzStyle: [{\n                type: Input\n            }], nzDot: [{\n                type: Input\n            }], nzOverflowCount: [{\n                type: Input\n            }], disableAnimation: [{\n                type: Input\n            }], nzCount: [{\n                type: Input\n            }], noAnimation: [{\n                type: Input\n            }] } });\n\nconst NZ_CONFIG_MODULE_NAME = 'badge';\nclass NzBadgeComponent {\n    constructor(nzConfigService, renderer, cdr, elementRef, directionality, noAnimation) {\n        this.nzConfigService = nzConfigService;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.noAnimation = noAnimation;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.showSup = false;\n        this.presetColor = null;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.nzShowZero = false;\n        this.nzShowDot = true;\n        this.nzStandalone = false;\n        this.nzDot = false;\n        this.nzOverflowCount = 99;\n        this.nzColor = undefined;\n        this.nzStyle = null;\n        this.nzText = null;\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.prepareBadgeForRtl();\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.prepareBadgeForRtl();\n    }\n    ngOnChanges(changes) {\n        const { nzColor, nzShowDot, nzDot, nzCount, nzShowZero } = changes;\n        if (nzColor) {\n            this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n        }\n        if (nzShowDot || nzDot || nzCount || nzShowZero) {\n            this.showSup = (this.nzShowDot && this.nzDot) || this.nzCount > 0 || (this.nzCount <= 0 && this.nzShowZero);\n        }\n    }\n    prepareBadgeForRtl() {\n        if (this.isRtlLayout) {\n            this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n        }\n    }\n    get isRtlLayout() {\n        return this.dir === 'rtl';\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzBadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzBadgeComponent, deps: [{ token: i1$1.NzConfigService }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2.Directionality, optional: true }, { token: i3.NzNoAnimationDirective, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzBadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NzBadgeComponent, selector: \"nz-badge\", inputs: { nzShowZero: \"nzShowZero\", nzShowDot: \"nzShowDot\", nzStandalone: \"nzStandalone\", nzDot: \"nzDot\", nzOverflowCount: \"nzOverflowCount\", nzColor: \"nzColor\", nzStyle: \"nzStyle\", nzText: \"nzText\", nzTitle: \"nzTitle\", nzStatus: \"nzStatus\", nzCount: \"nzCount\", nzOffset: \"nzOffset\" }, host: { properties: { \"class.ant-badge-status\": \"nzStatus\", \"class.ant-badge-not-a-wrapper\": \"!!(nzStandalone || nzStatus || nzColor)\" }, classAttribute: \"ant-badge\" }, exportAs: [\"nzBadge\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"nzStatus || nzColor\">\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    </ng-container>\n    <ng-content></ng-content>\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      <nz-badge-sup\n        *ngIf=\"showSup\"\n        [nzOffset]=\"nzOffset\"\n        [nzTitle]=\"nzTitle\"\n        [nzStyle]=\"nzStyle\"\n        [nzDot]=\"nzDot\"\n        [nzOverflowCount]=\"nzOverflowCount\"\n        [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n        [nzCount]=\"nzCount\"\n        [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n      ></nz-badge-sup>\n    </ng-container>\n  `, isInline: true, components: [{ type: NzBadgeSupComponent, selector: \"nz-badge-sup\", inputs: [\"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\"], exportAs: [\"nzBadgeSup\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i6.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], animations: [zoomBadgeMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzShowZero\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzShowDot\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzStandalone\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzDot\", void 0);\n__decorate([\n    WithConfig()\n], NzBadgeComponent.prototype, \"nzOverflowCount\", void 0);\n__decorate([\n    WithConfig()\n], NzBadgeComponent.prototype, \"nzColor\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzBadgeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-badge',\n                    exportAs: 'nzBadge',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [zoomBadgeMotion],\n                    template: `\n    <ng-container *ngIf=\"nzStatus || nzColor\">\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    </ng-container>\n    <ng-content></ng-content>\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      <nz-badge-sup\n        *ngIf=\"showSup\"\n        [nzOffset]=\"nzOffset\"\n        [nzTitle]=\"nzTitle\"\n        [nzStyle]=\"nzStyle\"\n        [nzDot]=\"nzDot\"\n        [nzOverflowCount]=\"nzOverflowCount\"\n        [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n        [nzCount]=\"nzCount\"\n        [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n      ></nz-badge-sup>\n    </ng-container>\n  `,\n                    host: {\n                        class: 'ant-badge',\n                        '[class.ant-badge-status]': 'nzStatus',\n                        '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.NzConfigService }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.NzNoAnimationDirective, decorators: [{\n                        type: Host\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzShowZero: [{\n                type: Input\n            }], nzShowDot: [{\n                type: Input\n            }], nzStandalone: [{\n                type: Input\n            }], nzDot: [{\n                type: Input\n            }], nzOverflowCount: [{\n                type: Input\n            }], nzColor: [{\n                type: Input\n            }], nzStyle: [{\n                type: Input\n            }], nzText: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzStatus: [{\n                type: Input\n            }], nzCount: [{\n                type: Input\n            }], nzOffset: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRibbonComponent {\n    constructor() {\n        this.nzPlacement = 'end';\n        this.nzText = null;\n        this.presetColor = null;\n    }\n    ngOnChanges(changes) {\n        const { nzColor } = changes;\n        if (nzColor) {\n            this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n        }\n    }\n}\nNzRibbonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzRibbonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzRibbonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NzRibbonComponent, selector: \"nz-ribbon\", inputs: { nzColor: \"nzColor\", nzPlacement: \"nzPlacement\", nzText: \"nzText\" }, host: { classAttribute: \"ant-ribbon-wrapper\" }, exportAs: [\"nzRibbon\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `, isInline: true, directives: [{ type: i6.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzRibbonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-ribbon',\n                    exportAs: 'nzRibbon',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `,\n                    host: { class: 'ant-ribbon-wrapper' }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzColor: [{\n                type: Input\n            }], nzPlacement: [{\n                type: Input\n            }], nzText: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeModule {\n}\nNzBadgeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzBadgeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzBadgeModule, declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent], imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule], exports: [NzBadgeComponent, NzRibbonComponent] });\nNzBadgeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzBadgeModule, imports: [[BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent],\n                    exports: [NzBadgeComponent, NzRibbonComponent],\n                    imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzBadgeComponent, NzBadgeModule, NzRibbonComponent };\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, NgModule } from '@angular/core';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTransButtonDirective {\n}\nNzTransButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTransButtonDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzTransButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NzTransButtonDirective, selector: \"button[nz-trans-button]\", host: { properties: { \"style.border\": \"\\\"0\\\"\", \"style.background\": \"\\\"transparent\\\"\", \"style.padding\": \"\\\"0\\\"\", \"style.line-height\": \"\\\"inherit\\\"\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTransButtonDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[nz-trans-button]',\n                    host: {\n                        '[style.border]': '\"0\"',\n                        '[style.background]': '\"transparent\"',\n                        '[style.padding]': '\"0\"',\n                        '[style.line-height]': '\"inherit\"'\n                    }\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTransButtonModule {\n}\nNzTransButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTransButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzTransButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTransButtonModule, declarations: [NzTransButtonDirective], imports: [CommonModule], exports: [NzTransButtonDirective] });\nNzTransButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTransButtonModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTransButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NzTransButtonDirective],\n                    exports: [NzTransButtonDirective],\n                    imports: [CommonModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTransButtonDirective, NzTransButtonModule };\n","import * as i5$1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/clipboard';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport * as i2$1 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i8 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, Inject, Optional, NgModule } from '@angular/core';\nimport * as i5 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i3 from 'ng-zorro-antd/core/trans-button';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\nimport * as i2 from 'ng-zorro-antd/i18n';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport * as i6 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i7 from 'ng-zorro-antd/input';\nimport { NzAutosizeDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport * as i4 from 'ng-zorro-antd/tooltip';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { __decorate } from 'tslib';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { isStyleSupport, measure, InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i4$1 from 'ng-zorro-antd/core/services';\n\nclass NzTextCopyComponent {\n    constructor(host, cdr, clipboard, i18n) {\n        this.host = host;\n        this.cdr = cdr;\n        this.clipboard = clipboard;\n        this.i18n = i18n;\n        this.copied = false;\n        this.copyId = -1;\n        this.nativeElement = this.host.nativeElement;\n        this.copyTooltip = null;\n        this.copedTooltip = null;\n        this.copyIcon = 'copy';\n        this.copedIcon = 'check';\n        this.destroy$ = new Subject();\n        this.icons = ['copy', 'check'];\n        this.textCopy = new EventEmitter();\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.updateTooltips();\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const { tooltips, icons } = changes;\n        if (tooltips) {\n            this.updateTooltips();\n        }\n        if (icons) {\n            this.updateIcons();\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this.copyId);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    onClick() {\n        if (this.copied) {\n            return;\n        }\n        this.copied = true;\n        this.cdr.detectChanges();\n        const text = this.text;\n        this.textCopy.emit(text);\n        this.clipboard.copy(text);\n        this.onCopied();\n    }\n    onCopied() {\n        clearTimeout(this.copyId);\n        this.copyId = setTimeout(() => {\n            this.copied = false;\n            this.cdr.detectChanges();\n        }, 3000);\n    }\n    updateTooltips() {\n        var _a, _b, _c, _d;\n        if (this.tooltips === null) {\n            this.copedTooltip = null;\n            this.copyTooltip = null;\n        }\n        else if (Array.isArray(this.tooltips)) {\n            const [copyTooltip, copedTooltip] = this.tooltips;\n            this.copyTooltip = copyTooltip || ((_a = this.locale) === null || _a === void 0 ? void 0 : _a.copy);\n            this.copedTooltip = copedTooltip || ((_b = this.locale) === null || _b === void 0 ? void 0 : _b.copied);\n        }\n        else {\n            this.copyTooltip = (_c = this.locale) === null || _c === void 0 ? void 0 : _c.copy;\n            this.copedTooltip = (_d = this.locale) === null || _d === void 0 ? void 0 : _d.copied;\n        }\n        this.cdr.markForCheck();\n    }\n    updateIcons() {\n        const [copyIcon, copedIcon] = this.icons;\n        this.copyIcon = copyIcon;\n        this.copedIcon = copedIcon;\n        this.cdr.markForCheck();\n    }\n}\nNzTextCopyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTextCopyComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Clipboard }, { token: i2.NzI18nService }], target: i0.ɵɵFactoryTarget.Component });\nNzTextCopyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NzTextCopyComponent, selector: \"nz-text-copy\", inputs: { text: \"text\", tooltips: \"tooltips\", icons: \"icons\" }, outputs: { textCopy: \"textCopy\" }, exportAs: [\"nzTextCopy\"], usesOnChanges: true, ngImport: i0, template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n  `, isInline: true, directives: [{ type: i3.NzTransButtonDirective, selector: \"button[nz-trans-button]\" }, { type: i4.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { type: i5.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { type: i6.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTextCopyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-text-copy',\n                    exportAs: 'nzTextCopy',\n                    template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Clipboard }, { type: i2.NzI18nService }]; }, propDecorators: { text: [{\n                type: Input\n            }], tooltips: [{\n                type: Input\n            }], icons: [{\n                type: Input\n            }], textCopy: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTextEditComponent {\n    constructor(zone, host, cdr, i18n) {\n        this.zone = zone;\n        this.host = host;\n        this.cdr = cdr;\n        this.i18n = i18n;\n        this.editing = false;\n        this.destroy$ = new Subject();\n        this.icon = 'edit';\n        this.startEditing = new EventEmitter();\n        this.endEditing = new EventEmitter(true);\n        this.nativeElement = this.host.nativeElement;\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    onClick() {\n        this.beforeText = this.text;\n        this.currentText = this.beforeText;\n        this.editing = true;\n        this.startEditing.emit();\n        this.focusAndSetValue();\n    }\n    confirm() {\n        this.editing = false;\n        this.endEditing.emit(this.currentText);\n    }\n    onInput(event) {\n        const target = event.target;\n        this.currentText = target.value;\n    }\n    onEnter(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.confirm();\n    }\n    onCancel() {\n        this.currentText = this.beforeText;\n        this.confirm();\n    }\n    focusAndSetValue() {\n        this.zone.onStable.pipe(take(1), takeUntil(this.destroy$)).subscribe(() => {\n            var _a;\n            if ((_a = this.textarea) === null || _a === void 0 ? void 0 : _a.nativeElement) {\n                this.textarea.nativeElement.focus();\n                this.textarea.nativeElement.value = this.currentText || '';\n                this.autosizeDirective.resizeToFitContent();\n                this.cdr.markForCheck();\n            }\n        });\n    }\n}\nNzTextEditComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTextEditComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i2.NzI18nService }], target: i0.ɵɵFactoryTarget.Component });\nNzTextEditComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NzTextEditComponent, selector: \"nz-text-edit\", inputs: { text: \"text\", icon: \"icon\", tooltip: \"tooltip\" }, outputs: { startEditing: \"startEditing\", endEditing: \"endEditing\" }, viewQueries: [{ propertyName: \"textarea\", first: true, predicate: [\"textarea\"], descendants: true }, { propertyName: \"autosizeDirective\", first: true, predicate: NzAutosizeDirective, descendants: true }], exportAs: [\"nzTextEdit\"], ngImport: i0, template: `\n    <button\n      *ngIf=\"!editing\"\n      nz-tooltip\n      nz-trans-button\n      class=\"ant-typography-edit\"\n      [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n    <ng-container *ngIf=\"editing\">\n      <textarea\n        #textarea\n        nz-input\n        nzAutosize\n        (input)=\"onInput($event)\"\n        (blur)=\"confirm()\"\n        (keydown.esc)=\"onCancel()\"\n        (keydown.enter)=\"onEnter($event)\"\n      ></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <i nz-icon nzType=\"enter\"></i>\n      </button>\n    </ng-container>\n  `, isInline: true, directives: [{ type: i8.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NzTransButtonDirective, selector: \"button[nz-trans-button]\" }, { type: i4.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { type: i5.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { type: i6.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i7.NzInputDirective, selector: \"input[nz-input],textarea[nz-input]\", inputs: [\"nzBorderless\", \"nzSize\", \"disabled\"], exportAs: [\"nzInput\"] }, { type: i7.NzAutosizeDirective, selector: \"textarea[nzAutosize]\", inputs: [\"nzAutosize\"], exportAs: [\"nzAutosize\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTextEditComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-text-edit',\n                    exportAs: 'nzTextEdit',\n                    template: `\n    <button\n      *ngIf=\"!editing\"\n      nz-tooltip\n      nz-trans-button\n      class=\"ant-typography-edit\"\n      [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n    <ng-container *ngIf=\"editing\">\n      <textarea\n        #textarea\n        nz-input\n        nzAutosize\n        (input)=\"onInput($event)\"\n        (blur)=\"confirm()\"\n        (keydown.esc)=\"onCancel()\"\n        (keydown.enter)=\"onEnter($event)\"\n      ></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <i nz-icon nzType=\"enter\"></i>\n      </button>\n    </ng-container>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i2.NzI18nService }]; }, propDecorators: { text: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], startEditing: [{\n                type: Output\n            }], endEditing: [{\n                type: Output\n            }], textarea: [{\n                type: ViewChild,\n                args: ['textarea', { static: false }]\n            }], autosizeDirective: [{\n                type: ViewChild,\n                args: [NzAutosizeDirective, { static: false }]\n            }] } });\n\nconst NZ_CONFIG_MODULE_NAME = 'typography';\nconst EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\nclass NzTypographyComponent {\n    constructor(nzConfigService, host, cdr, viewContainerRef, renderer, platform, i18n, document, resizeService, directionality) {\n        this.nzConfigService = nzConfigService;\n        this.host = host;\n        this.cdr = cdr;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.platform = platform;\n        this.i18n = i18n;\n        this.resizeService = resizeService;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzCopyable = false;\n        this.nzEditable = false;\n        this.nzDisabled = false;\n        this.nzExpandable = false;\n        this.nzEllipsis = false;\n        this.nzCopyTooltips = undefined;\n        this.nzCopyIcons = ['copy', 'check'];\n        this.nzEditTooltip = undefined;\n        this.nzEditIcon = 'edit';\n        this.nzEllipsisRows = 1;\n        this.nzContentChange = new EventEmitter();\n        this.nzCopy = new EventEmitter();\n        this.nzExpandChange = new EventEmitter();\n        // This is not a two-way binding output with {@link nzEllipsis}\n        this.nzOnEllipsis = new EventEmitter();\n        this.expandableBtnElementCache = null;\n        this.editing = false;\n        this.cssEllipsis = false;\n        this.isEllipsis = true;\n        this.expanded = false;\n        this.ellipsisStr = '...';\n        this.dir = 'ltr';\n        this.viewInit = false;\n        this.rfaId = -1;\n        this.destroy$ = new Subject();\n        this.windowResizeSubscription = Subscription.EMPTY;\n        this.document = document;\n    }\n    get hasEllipsisObservers() {\n        return this.nzOnEllipsis.observers.length > 0;\n    }\n    get canCssEllipsis() {\n        return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n    }\n    get hasOperationsWithEllipsis() {\n        return (this.nzCopyable || this.nzEditable || this.nzExpandable) && this.nzEllipsis;\n    }\n    get copyText() {\n        return (typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent);\n    }\n    onTextCopy(text) {\n        this.nzCopy.emit(text);\n    }\n    onStartEditing() {\n        this.editing = true;\n    }\n    onEndEditing(text) {\n        this.editing = false;\n        this.nzContentChange.emit(text);\n        if (this.nzContent === text) {\n            this.renderOnNextFrame();\n        }\n        this.cdr.markForCheck();\n    }\n    onExpand() {\n        this.isEllipsis = false;\n        this.expanded = true;\n        this.nzExpandChange.emit();\n        this.nzOnEllipsis.emit(false);\n    }\n    canUseCSSEllipsis() {\n        if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n            return false;\n        }\n        // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n        if (this.hasEllipsisObservers) {\n            return false;\n        }\n        if (this.nzEllipsisRows === 1) {\n            return isStyleSupport('textOverflow');\n        }\n        else {\n            return isStyleSupport('webkitLineClamp');\n        }\n    }\n    renderOnNextFrame() {\n        cancelRequestAnimationFrame(this.rfaId);\n        if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n            return;\n        }\n        this.rfaId = reqAnimFrame(() => {\n            this.syncEllipsis();\n        });\n    }\n    getOriginContentViewRef() {\n        const viewRef = this.viewContainerRef.createEmbeddedView(this.contentTemplate, {\n            content: this.nzContent\n        });\n        viewRef.detectChanges();\n        return {\n            viewRef,\n            removeView: () => {\n                this.viewContainerRef.remove(this.viewContainerRef.indexOf(viewRef));\n            }\n        };\n    }\n    syncEllipsis() {\n        if (this.cssEllipsis) {\n            return;\n        }\n        const { viewRef, removeView } = this.getOriginContentViewRef();\n        const fixedNodes = [this.textCopyRef, this.textEditRef]\n            .filter(e => e && e.nativeElement)\n            .map(e => e.nativeElement);\n        const expandableBtnElement = this.getExpandableBtnElement();\n        if (expandableBtnElement) {\n            fixedNodes.push(expandableBtnElement);\n        }\n        const { contentNodes, text, ellipsis } = measure(this.host.nativeElement, this.nzEllipsisRows, viewRef.rootNodes, fixedNodes, this.ellipsisStr, this.nzSuffix);\n        removeView();\n        this.ellipsisText = text;\n        if (ellipsis !== this.isEllipsis) {\n            this.isEllipsis = ellipsis;\n            this.nzOnEllipsis.emit(ellipsis);\n        }\n        const ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n        while (ellipsisContainerNativeElement.firstChild) {\n            this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n        }\n        contentNodes.forEach(n => {\n            this.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n        });\n        this.cdr.markForCheck();\n    }\n    // Need to create the element for calculation size before view init\n    getExpandableBtnElement() {\n        if (this.nzExpandable) {\n            const expandText = this.locale ? this.locale.expand : '';\n            const cache = this.expandableBtnElementCache;\n            if (!cache || cache.innerText === expandText) {\n                const el = this.document.createElement('a');\n                el.className = EXPAND_ELEMENT_CLASSNAME;\n                el.innerText = expandText;\n                this.expandableBtnElementCache = el;\n            }\n            return this.expandableBtnElementCache;\n        }\n        else {\n            this.expandableBtnElementCache = null;\n            return null;\n        }\n    }\n    renderAndSubscribeWindowResize() {\n        if (this.platform.isBrowser) {\n            this.windowResizeSubscription.unsubscribe();\n            this.cssEllipsis = this.canUseCSSEllipsis();\n            this.renderOnNextFrame();\n            this.windowResizeSubscription = this.resizeService\n                .subscribe()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.renderOnNextFrame());\n        }\n    }\n    ngOnInit() {\n        var _a;\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.cdr.markForCheck();\n        });\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngAfterViewInit() {\n        this.viewInit = true;\n        this.renderAndSubscribeWindowResize();\n    }\n    ngOnChanges(changes) {\n        const { nzCopyable, nzEditable, nzExpandable, nzEllipsis, nzContent, nzEllipsisRows, nzSuffix } = changes;\n        if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n            if (this.nzEllipsis) {\n                if (this.expanded) {\n                    this.windowResizeSubscription.unsubscribe();\n                }\n                else {\n                    this.renderAndSubscribeWindowResize();\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.expandableBtnElementCache = null;\n        this.windowResizeSubscription.unsubscribe();\n    }\n}\nNzTypographyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTypographyComponent, deps: [{ token: i1$1.NzConfigService }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }, { token: i2$1.Platform }, { token: i2.NzI18nService }, { token: DOCUMENT }, { token: i4$1.NzResizeService }, { token: i5$1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzTypographyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NzTypographyComponent, selector: \"\\n  nz-typography,\\n  [nz-typography],\\n  p[nz-paragraph],\\n  span[nz-text],\\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\\n  \", inputs: { nzCopyable: \"nzCopyable\", nzEditable: \"nzEditable\", nzDisabled: \"nzDisabled\", nzExpandable: \"nzExpandable\", nzEllipsis: \"nzEllipsis\", nzCopyTooltips: \"nzCopyTooltips\", nzCopyIcons: \"nzCopyIcons\", nzEditTooltip: \"nzEditTooltip\", nzEditIcon: \"nzEditIcon\", nzContent: \"nzContent\", nzEllipsisRows: \"nzEllipsisRows\", nzType: \"nzType\", nzCopyText: \"nzCopyText\", nzSuffix: \"nzSuffix\" }, outputs: { nzContentChange: \"nzContentChange\", nzCopy: \"nzCopy\", nzExpandChange: \"nzExpandChange\", nzOnEllipsis: \"nzOnEllipsis\" }, host: { properties: { \"class.ant-typography\": \"!editing\", \"class.ant-typography-rtl\": \"dir === \\\"rtl\\\"\", \"class.ant-typography-edit-content\": \"editing\", \"class.ant-typography-secondary\": \"nzType === \\\"secondary\\\"\", \"class.ant-typography-warning\": \"nzType === \\\"warning\\\"\", \"class.ant-typography-danger\": \"nzType === \\\"danger\\\"\", \"class.ant-typography-success\": \"nzType === \\\"success\\\"\", \"class.ant-typography-disabled\": \"nzDisabled\", \"class.ant-typography-ellipsis\": \"nzEllipsis && !expanded\", \"class.ant-typography-single-line\": \"nzEllipsis && nzEllipsisRows === 1\", \"class.ant-typography-ellipsis-single-line\": \"canCssEllipsis && nzEllipsisRows === 1\", \"class.ant-typography-ellipsis-multiple-line\": \"canCssEllipsis && nzEllipsisRows > 1\", \"style.-webkit-line-clamp\": \"(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null\" } }, viewQueries: [{ propertyName: \"textEditRef\", first: true, predicate: NzTextEditComponent, descendants: true }, { propertyName: \"textCopyRef\", first: true, predicate: NzTextCopyComponent, descendants: true }, { propertyName: \"ellipsisContainer\", first: true, predicate: [\"ellipsisContainer\"], descendants: true }, { propertyName: \"expandableBtn\", first: true, predicate: [\"expandable\"], descendants: true }, { propertyName: \"contentTemplate\", first: true, predicate: [\"contentTemplate\"], descendants: true }], exportAs: [\"nzTypography\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `, isInline: true, components: [{ type: NzTextEditComponent, selector: \"nz-text-edit\", inputs: [\"text\", \"icon\", \"tooltip\"], outputs: [\"startEditing\", \"endEditing\"], exportAs: [\"nzTextEdit\"] }, { type: NzTextCopyComponent, selector: \"nz-text-copy\", inputs: [\"text\", \"tooltips\", \"icons\"], outputs: [\"textCopy\"], exportAs: [\"nzTextCopy\"] }], directives: [{ type: i8.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i8.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzCopyable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzEditable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzExpandable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzEllipsis\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzCopyTooltips\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzCopyIcons\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzEditTooltip\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzEditIcon\", void 0);\n__decorate([\n    WithConfig(),\n    InputNumber()\n], NzTypographyComponent.prototype, \"nzEllipsisRows\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTypographyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: `\n  nz-typography,\n  [nz-typography],\n  p[nz-paragraph],\n  span[nz-text],\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\n  `,\n                    exportAs: 'nzTypography',\n                    template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    host: {\n                        '[class.ant-typography]': '!editing',\n                        '[class.ant-typography-rtl]': 'dir === \"rtl\"',\n                        '[class.ant-typography-edit-content]': 'editing',\n                        '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n                        '[class.ant-typography-warning]': 'nzType === \"warning\"',\n                        '[class.ant-typography-danger]': 'nzType === \"danger\"',\n                        '[class.ant-typography-success]': 'nzType === \"success\"',\n                        '[class.ant-typography-disabled]': 'nzDisabled',\n                        '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n                        '[class.ant-typography-single-line]': 'nzEllipsis && nzEllipsisRows === 1',\n                        '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n                        '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n                        '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.NzConfigService }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }, { type: i2$1.Platform }, { type: i2.NzI18nService }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i4$1.NzResizeService }, { type: i5$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzCopyable: [{\n                type: Input\n            }], nzEditable: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzExpandable: [{\n                type: Input\n            }], nzEllipsis: [{\n                type: Input\n            }], nzCopyTooltips: [{\n                type: Input\n            }], nzCopyIcons: [{\n                type: Input\n            }], nzEditTooltip: [{\n                type: Input\n            }], nzEditIcon: [{\n                type: Input\n            }], nzContent: [{\n                type: Input\n            }], nzEllipsisRows: [{\n                type: Input\n            }], nzType: [{\n                type: Input\n            }], nzCopyText: [{\n                type: Input\n            }], nzSuffix: [{\n                type: Input\n            }], nzContentChange: [{\n                type: Output\n            }], nzCopy: [{\n                type: Output\n            }], nzExpandChange: [{\n                type: Output\n            }], nzOnEllipsis: [{\n                type: Output\n            }], textEditRef: [{\n                type: ViewChild,\n                args: [NzTextEditComponent, { static: false }]\n            }], textCopyRef: [{\n                type: ViewChild,\n                args: [NzTextCopyComponent, { static: false }]\n            }], ellipsisContainer: [{\n                type: ViewChild,\n                args: ['ellipsisContainer', { static: false }]\n            }], expandableBtn: [{\n                type: ViewChild,\n                args: ['expandable', { static: false }]\n            }], contentTemplate: [{\n                type: ViewChild,\n                args: ['contentTemplate', { static: false }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTypographyModule {\n}\nNzTypographyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTypographyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzTypographyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTypographyModule, declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent], imports: [BidiModule,\n        CommonModule,\n        NzIconModule,\n        NzToolTipModule,\n        NzInputModule,\n        NzI18nModule,\n        NzTransButtonModule,\n        ClipboardModule,\n        NzOutletModule], exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule] });\nNzTypographyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTypographyModule, imports: [[\n            BidiModule,\n            CommonModule,\n            NzIconModule,\n            NzToolTipModule,\n            NzInputModule,\n            NzI18nModule,\n            NzTransButtonModule,\n            ClipboardModule,\n            NzOutletModule\n        ], PlatformModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NzTypographyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CommonModule,\n                        NzIconModule,\n                        NzToolTipModule,\n                        NzInputModule,\n                        NzI18nModule,\n                        NzTransButtonModule,\n                        ClipboardModule,\n                        NzOutletModule\n                    ],\n                    exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule],\n                    declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTextCopyComponent, NzTextEditComponent, NzTypographyComponent, NzTypographyModule };\n"],"names":["DOCUMENT","i0","Injectable","Inject","InjectionToken","EventEmitter","Directive","Optional","Input","Output","NgModule","PendingCopy","constructor","text","_document","textarea","_textarea","createElement","styles","style","position","top","opacity","left","setAttribute","value","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","_a","destroy","remove","undefined","Clipboard","document","pendingCopy","beginCopy","ɵfac","ɵprov","type","args","providedIn","decorators","CDK_COPY_TO_CLIPBOARD_CONFIG","CdkCopyToClipboard","_clipboard","_ngZone","config","attempts","copied","_pending","Set","remainingAttempts","pending","add","attempt","_destroyed","_currentTimeout","runOutsideAngular","setTimeout","delete","emit","ngOnDestroy","clearTimeout","forEach","clear","NgZone","ɵdir","selector","host","ClipboardModule","ɵmod","ɵinj","declarations","exports","__decorate","Component","ViewEncapsulation","ChangeDetectionStrategy","Host","Subject","takeUntil","zoomBadgeMotion","i1$1","WithConfig","InputBoolean","i2","BidiModule","i3","NzNoAnimationModule","i1","CommonModule","i6","NzOutletModule","ObserversModule","badgePresetColors","NzBadgeSupComponent","nzStyle","nzDot","nzOverflowCount","disableAnimation","noAnimation","maxNumberArray","countArray","count","countSingleArray","generateMaxNumberArray","toString","split","ngOnInit","ngOnChanges","changes","nzCount","currentValue","Math","max","map","item","ɵcmp","NgIf","NgForOf","NzNoAnimationDirective","exportAs","preserveWhitespaces","encapsulation","None","changeDetection","OnPush","animations","template","class","nzOffset","nzTitle","NZ_CONFIG_MODULE_NAME","NzBadgeComponent","nzConfigService","renderer","cdr","elementRef","directionality","_nzModuleName","showSup","presetColor","dir","destroy$","nzShowZero","nzShowDot","nzStandalone","nzColor","nzText","change","pipe","subscribe","direction","prepareBadgeForRtl","detectChanges","indexOf","isRtlLayout","addClass","nativeElement","removeClass","next","complete","NzConfigService","Renderer2","ChangeDetectorRef","ElementRef","Directionality","NzStringTemplateOutletDirective","NgStyle","prototype","nzStatus","NzRibbonComponent","nzPlacement","NzBadgeModule","imports","NzTransButtonDirective","NzTransButtonModule","i5$1","i2$1","PlatformModule","i8","ViewChild","i5","NzI18nModule","NzIconModule","i7","NzAutosizeDirective","NzInputModule","i4","NzToolTipModule","Subscription","take","cancelRequestAnimationFrame","reqAnimFrame","isStyleSupport","measure","InputNumber","i4$1","NzTextCopyComponent","clipboard","i18n","copyId","copyTooltip","copedTooltip","copyIcon","copedIcon","icons","textCopy","localeChange","locale","getLocaleData","updateTooltips","markForCheck","tooltips","updateIcons","onClick","onCopied","_b","_c","_d","Array","isArray","NzI18nService","NzTooltipDirective","NzIconDirective","NzTextEditComponent","zone","editing","icon","startEditing","endEditing","beforeText","currentText","focusAndSetValue","confirm","onInput","event","target","onEnter","stopPropagation","preventDefault","onCancel","onStable","autosizeDirective","resizeToFitContent","NzInputDirective","tooltip","static","EXPAND_ELEMENT_CLASSNAME","NzTypographyComponent","viewContainerRef","platform","resizeService","nzCopyable","nzEditable","nzDisabled","nzExpandable","nzEllipsis","nzCopyTooltips","nzCopyIcons","nzEditTooltip","nzEditIcon","nzEllipsisRows","nzContentChange","nzCopy","nzExpandChange","nzOnEllipsis","expandableBtnElementCache","cssEllipsis","isEllipsis","expanded","ellipsisStr","viewInit","rfaId","windowResizeSubscription","EMPTY","hasEllipsisObservers","observers","canCssEllipsis","hasOperationsWithEllipsis","copyText","nzCopyText","nzContent","onTextCopy","onStartEditing","onEndEditing","renderOnNextFrame","onExpand","canUseCSSEllipsis","nzSuffix","isBrowser","syncEllipsis","getOriginContentViewRef","viewRef","createEmbeddedView","contentTemplate","content","removeView","fixedNodes","textCopyRef","textEditRef","filter","e","expandableBtnElement","getExpandableBtnElement","push","contentNodes","ellipsis","rootNodes","ellipsisText","ellipsisContainerNativeElement","ellipsisContainer","firstChild","removeChild","n","cloneNode","expandText","expand","cache","innerText","el","className","renderAndSubscribeWindowResize","unsubscribe","ngAfterViewInit","ViewContainerRef","Platform","NzResizeService","NgTemplateOutlet","nzType","expandableBtn","NzTypographyModule"],"sourceRoot":"webpack:///"}